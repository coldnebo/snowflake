<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace |
      RmRegistryBranch |
      RmClipboardNode
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmPlugInData?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLESEffect, RmDirectXEffect?, RmOpenGLEffect? )
      )?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLPass
      )*
   )>
   
   <!ELEMENT RmOpenGLESEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLESPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmTessellationNode?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>

   <!ELEMENT RmGLESPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLESShader, RmGLESShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>      
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmGLESShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>
   
   <!ELEMENT RmTextureObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmState 
      )*
   )>

   <!ELEMENT RmTessellationNode
   (
      RmPlugInData?,
      RmStringVariable*
   )>
   
   <!ELEMENT RmStreamMap
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmPlugInData?, RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmPlugInData?, RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmFloatVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmVectorVariable       ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMatrixVariable       ( RmPlugInData?, RmStringVariable? )>   
   <!ELEMENT RmColorVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmIntegerVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm2DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCubemapVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm3DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmLightVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMaterialVariable     ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCamera               ( RmPlugInData?, RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock, RmPlugInData? )>
   
   <!ELEMENT RmDynamicVariable
   (
      RmDynamicVariableValueContainer,
      RmPlugInData?,
      RmStringVariable?
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmPlugInData?,
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
         RmRegistryBranch |
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable
      )*      
   )>

   <!ELEMENT RmPlugInData
   ( 
      RmTextDataBlock?,
      (
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable
      )*      
   )>
   
   <!ELEMENT RmClipboardNode
   (
      RmTextDataBlock?,
      (
         RmEffectWorkspace |
         RmEffectGroup |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmPass |
         RmGLPass |
         RmGLESPass |
         RmShader |
         RmHLSLShader |
         RmGLShader |
         RmGLESShader |
         RmShaderConstant |
         RmSampler |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmRenderStateBlock |
         RmState |
         RmStreamMap |
         RmStream |
         RmStreamChannel |
         RmModelData |
         RmTextureReference |
         RmLightReference |
         RmMaterialReference |
         RmModelReference |
         RmStreamMapReference |
         RmRenderableTexture |
         RmRenderTarget |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmDynamicVariableValue |
         RmColorVariable |
         RmIntegerVariable |
         RmStringVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRegistryBranch |
         RmPlugInData |
         RmCamera |
         RmCameraReference
      )*      
   )>
   
   <!ELEMENT RmStreamChannel        ( RmPlugInData? ) >
   <!ELEMENT RmShaderConstant       ( RmPlugInData? ) >
   <!ELEMENT RmSampler              ( RmPlugInData? ) >
   <!ELEMENT RmState                ( RmPlugInData? ) >
   <!ELEMENT RmDynamicVariableValue ( RmPlugInData? ) >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 
   
   <!ATTLIST RmOpenGLESEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmGLESPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
      COMPILER_FLAGS                CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  
   
   <!ATTLIST RmGLESShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
      VERTEX_TEXTURE                ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
     API                            CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
      ATTRIBUTE_NAME                CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIENTATION                   CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
      WIDTH_RATIO                   CDATA #REQUIRED
      HEIGHT_RATIO                  CDATA #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmPlugInData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PLUGIN_GUID                   CDATA #REQUIRED
   >

   <!ATTLIST RmClipboardNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTessellationNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      MIN_TESSELLATION_LEVEL        CDATA #REQUIRED
      MAX_TESSELLATION_LEVEL        CDATA #REQUIRED
   >
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Effect Workspace" API="" ACTIVE_EFFECT="Effect Workspace.Effect Group 1.Snowflake" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.71">
  <RmRegistryBranch NAME="RM_REGISTRY" API="" XML_VERSION="RenderMonkey 1.71">
   <RmRegistryBranch NAME="RM_LOCAL" API="" XML_VERSION="RenderMonkey 1.71">
    <RmRegistryBranch NAME="RM_PLUGIN" API="" XML_VERSION="RenderMonkey 1.71"><RmTextDataBlock TYPE="TEXT"><![CDATA[
<DockingPaneLayouts><Application_Layout><Pane-1><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>2</TopContaner><WindowRectTopPos>729</WindowRectTopPos><WindowRectBottomPos>979</WindowRectBottomPos><WindowRectLeftPos>-113</WindowRectLeftPos><WindowRectRightPos>1567</WindowRectRightPos></Pane-1><Pane-2><Type>2</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Horiz>1</Horiz><Pane-1>3</Pane-1><Panes>1</Panes></Pane-2><Pane-3><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-3><Pane-4><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>1</Horiz><Pane-1>5</Pane-1><Pane-2>6</Pane-2><Pane-3>7</Pane-3><Pane-4>8</Pane-4><Pane-5>9</Pane-5><Pane-6>10</Pane-6><Pane-7>11</Pane-7><Pane-8>12</Pane-8><Pane-9>13</Pane-9><Pane-10>14</Pane-10><Pane-11>15</Pane-11><Pane-12>16</Pane-12><Pane-13>17</Pane-13><Panes>13</Panes></Pane-4><Pane-5><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-5><Pane-6><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-6><Pane-7><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-7><Pane-8><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-8><Pane-9><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-9><Pane-10><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-10><Pane-11><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-11><Pane-12><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-12><Pane-13><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-13><Pane-14><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-14><Pane-15><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-15><Pane-16><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-16><Pane-17><Type>2</Type><DockingCX>1241</DockingCX><DockingCY>0</DockingCY><Horiz>0</Horiz><Pane-1>18</Pane-1><Pane-2>29</Pane-2><Panes>2</Panes></Pane-17><Pane-18><Type>2</Type><DockingCX>0</DockingCX><DockingCY>603</DockingCY><Horiz>1</Horiz><Pane-1>19</Pane-1><Panes>1</Panes></Pane-18><Pane-19><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>0</Horiz><Pane-1>20</Pane-1><Panes>1</Panes></Pane-19><Pane-20><Type>2</Type><DockingCX>0</DockingCX><DockingCY>649</DockingCY><Horiz>1</Horiz><Pane-1>21</Pane-1><Pane-2>26</Pane-2><Pane-3>27</Pane-3><Panes>3</Panes></Pane-20><Pane-21><Type>2</Type><DockingCX>265</DockingCX><DockingCY>250</DockingCY><Horiz>0</Horiz><Pane-1>22</Pane-1><Pane-2>24</Pane-2><Panes>2</Panes></Pane-21><Pane-22><Type>1</Type><DockingCX>265</DockingCX><DockingCY>250</DockingCY><Selected>23</Selected><Panes>1</Panes><Pane-1>23</Pane-1></Pane-22><Pane-23><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Workspace</Title><ID>1000</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>22</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>22</LastHolder></Pane-23><Pane-24><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>25</Pane-1><Panes>1</Panes></Pane-24><Pane-25><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-25><Pane-26><Type>4</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY></Pane-26><Pane-27><Type>1</Type><DockingCX>146</DockingCX><DockingCY>250</DockingCY><Selected>28</Selected><Panes>1</Panes><Pane-1>28</Pane-1></Pane-27><Pane-28><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Artist Editor</Title><ID>1001</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>27</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>27</LastHolder></Pane-28><Pane-29><Type>2</Type><DockingCX>250</DockingCX><DockingCY>128</DockingCY><Horiz>1</Horiz><Pane-1>30</Pane-1><Panes>1</Panes></Pane-29><Pane-30><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>31</Selected><Panes>1</Panes><Pane-1>31</Pane-1></Pane-30><Pane-31><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Output</Title><ID>1002</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>30</DockingHolder><FloatingHolder>3</FloatingHolder><LastHolder>30</LastHolder></Pane-31><Pane-32><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>f1MyFloat</Title><ID>1100</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>16</DockingHolder><FloatingHolder>35</FloatingHolder><LastHolder>35</LastHolder></Pane-32><Pane-33><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>34</TopContaner><WindowRectTopPos>149</WindowRectTopPos><WindowRectBottomPos>259</WindowRectBottomPos><WindowRectLeftPos>72</WindowRectLeftPos><WindowRectRightPos>507</WindowRectRightPos></Pane-33><Pane-34><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>35</Pane-1><Panes>1</Panes></Pane-34><Pane-35><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-35><Pane-36><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>fFilmDepth</Title><ID>1101</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>15</DockingHolder><FloatingHolder>39</FloatingHolder><LastHolder>39</LastHolder></Pane-36><Pane-37><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>38</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-37><Pane-38><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>39</Pane-1><Panes>1</Panes></Pane-38><Pane-39><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-39><Pane-40><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>fSpecularPower</Title><ID>1102</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>14</DockingHolder><FloatingHolder>43</FloatingHolder><LastHolder>43</LastHolder></Pane-40><Pane-41><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>42</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-41><Pane-42><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>43</Pane-1><Panes>1</Panes></Pane-42><Pane-43><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-43><Pane-44><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>sphereSize</Title><ID>1103</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>13</DockingHolder><FloatingHolder>47</FloatingHolder><LastHolder>47</LastHolder></Pane-44><Pane-45><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>46</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-45><Pane-46><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>47</Pane-1><Panes>1</Panes></Pane-46><Pane-47><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-47><Pane-48><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>etaRatio</Title><ID>1104</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>12</DockingHolder><FloatingHolder>51</FloatingHolder><LastHolder>51</LastHolder></Pane-48><Pane-49><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>50</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-49><Pane-50><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>51</Pane-1><Panes>1</Panes></Pane-50><Pane-51><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-51><Pane-52><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>refractPhongMix</Title><ID>1105</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>11</DockingHolder><FloatingHolder>55</FloatingHolder><LastHolder>55</LastHolder></Pane-52><Pane-53><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>54</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-53><Pane-54><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>55</Pane-1><Panes>1</Panes></Pane-54><Pane-55><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-55><Pane-56><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>fvLightPosition</Title><ID>1106</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>10</DockingHolder><FloatingHolder>59</FloatingHolder><LastHolder>59</LastHolder></Pane-56><Pane-57><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>58</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>200</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-57><Pane-58><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>59</Pane-1><Panes>1</Panes></Pane-58><Pane-59><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-59><Pane-60><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>fvLightPosition</Title><ID>1107</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>9</DockingHolder><FloatingHolder>63</FloatingHolder><LastHolder>63</LastHolder></Pane-60><Pane-61><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>62</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-61><Pane-62><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>63</Pane-1><Panes>1</Panes></Pane-62><Pane-63><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-63><Pane-64><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>fvEyePosition</Title><ID>1108</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>8</DockingHolder><FloatingHolder>67</FloatingHolder><LastHolder>67</LastHolder></Pane-64><Pane-65><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>66</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-65><Pane-66><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>67</Pane-1><Panes>1</Panes></Pane-66><Pane-67><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-67><Pane-68><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>filmScale</Title><ID>1109</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>25</DockingHolder><FloatingHolder>72</FloatingHolder><LastHolder>72</LastHolder></Pane-68><Pane-69><Type>5</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Direction>0</Direction><Panes>0</Panes></Pane-69><Pane-70><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>71</TopContaner><WindowRectTopPos>164</WindowRectTopPos><WindowRectBottomPos>298</WindowRectBottomPos><WindowRectLeftPos>133</WindowRectLeftPos><WindowRectRightPos>588</WindowRectRightPos></Pane-70><Pane-71><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>72</Pane-1><Panes>1</Panes></Pane-71><Pane-72><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-72><Pane-73><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>heightScale</Title><ID>1110</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>7</DockingHolder><FloatingHolder>76</FloatingHolder><LastHolder>76</LastHolder></Pane-73><Pane-74><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>75</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-74><Pane-75><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>76</Pane-1><Panes>1</Panes></Pane-75><Pane-76><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-76><Pane-77><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>delta</Title><ID>1111</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>6</DockingHolder><FloatingHolder>80</FloatingHolder><LastHolder>80</LastHolder></Pane-77><Pane-78><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>79</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-78><Pane-79><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>80</Pane-1><Panes>1</Panes></Pane-79><Pane-80><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-80><Pane-81><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>fcameraDistance</Title><ID>1112</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>5</DockingHolder><FloatingHolder>84</FloatingHolder><LastHolder>84</LastHolder></Pane-81><Pane-82><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>83</TopContaner><WindowRectTopPos>171</WindowRectTopPos><WindowRectBottomPos>281</WindowRectBottomPos><WindowRectLeftPos>1670</WindowRectLeftPos><WindowRectRightPos>2105</WindowRectRightPos></Pane-82><Pane-83><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>84</Pane-1><Panes>1</Panes></Pane-83><Pane-84><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-84><Summary><TopContainer>4</TopContainer><Client>26</Client><Panes>84</Panes></Summary></Application_Layout></DockingPaneLayouts>
]]></RmTextDataBlock>
     <RmRegistryBranch NAME="RmPreviewDx9Window" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLESWindow" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLPreview" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLWindow" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EffectPlacementRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="387" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="77" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="504" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="442" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="350" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="350" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmLightEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="NoteEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderableTextureEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderTargetEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderStateBlockEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="14" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="183" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="559" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="546" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureObjectEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="50" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="50" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="659" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="389" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTessellationNodeEditorDlg" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureGenerator" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmShaderEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Fragment Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Pass 2]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-9" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-5" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Fragment Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Pass 0]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="49" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="619" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="23" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake_old" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Vertex Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Pass 0]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake_almost" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Fragment Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Pass 2]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmScalarEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.fFilmDepth" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1101" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.fSpecularPower" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1102" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.etaRatio" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1104" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.filmScale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1109" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.heightScale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1110" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.fcameraDistance" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1112" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmDynamicVariableEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmVectorEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Effect Group 1.Snowflake.lightPositionWS" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1107" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
    </RmRegistryBranch>
    <RmRegistryBranch NAME="WORKSPACE" API="" XML_VERSION="RenderMonkey 1.71">
     <RmStringVariable NAME="LAST_SAVE" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
27/11/2010 12:33:17]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.82 (build 322)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.71]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
F:\linuxhome\lkyrala\projects\cs175\final_project\kyrala_l\snowflake-shader\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmEffectGroup NAME="Effect Group 1" API="">
   <RmOpenGLEffect NAME="Snowflake" API="OpenGL" ACTIVE_CAMERA="">
    <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="3.970000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="fFilmDepth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="6.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="etaRatio" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.760000" MIN="0.650000" MAX="1.000000" CLAMP="TRUE"/>
    <RmVectorVariable NAME="viewPositionWS" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="0.588335" VALUE_1="1.712726" VALUE_2="0.077998" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmVectorVariable NAME="lightPositionWS" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="100.000000" VALUE_2="100.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmMatrixVariable NAME="mModelViewInverse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="WorldViewInverse" VALUE_0="0.116894" VALUE_1="0.155632" VALUE_2="0.980874" VALUE_3="264.846069" VALUE_4="0.704647" VALUE_5="0.682991" VALUE_6="-0.192343" VALUE_7="-51.934410" VALUE_8="-0.699863" VALUE_9="0.713654" VALUE_10="-0.029829" VALUE_11="-8.053922" VALUE_12="0.000000" VALUE_13="-0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="filmScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.309700" MIN="0.010000" MAX="10.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="heightScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.022078" MIN="0.000100" MAX="0.100000" CLAMP="TRUE"/>
    <RmMatrixVariable NAME="fmModel" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="World" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="0.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="fcameraDistance" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="2.240000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.650980" VALUE_1="0.650762" VALUE_2="0.650762" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Fringe" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\ColorRamp01.png" ORIGIN="1"/>
    <Rm2DTextureVariable NAME="snowflake" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\texture.png" ORIGIN="1"/>
    <RmCubemapVariable NAME="Snow" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Textures\Snow.dds" ORIGIN="1"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="Stream" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     </RmStream>
    </RmStreamMap>
    <RmModelData NAME="Model" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\TesselatedPlane.obj" ORIENTATION="0"/>
    <RmModelData NAME="cube" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\TexturedCube.3ds" ORIENTATION="1"/>
    <RmGLPass NAME="Pass 2" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
     <RmModelReference NAME="Model" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="8" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendEquation" API="OpenGL" STATE="52" VALUE="5" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4  fvSpecular;
uniform float fSpecularPower;
uniform float fcameraDistance;

uniform sampler2D   fringeMap;
uniform samplerCube environment;
uniform sampler2D   snowflakeMap;

varying vec2 fringeCoords;
varying vec2 snowflakeTexCoords;

varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;

varying float fFilmDepth;


// LK: returns the refracted vector given normalized I, N vectors, and eta...  
// from snell's law: http://en.wikipedia.org/wiki/Snell's_law
vec3 refract_function(vec3 i, vec3 n, float eta) {
  float fNDotNL = dot(n,-i);
  float cosTheta1 = fNDotNL;
  float cosTheta2 = sqrt(1.0 - pow(eta,2.0) * (1.0 - pow(cosTheta1,2.0)));
  
  vec3 vreflect = i + (2.0*cosTheta1)*n;
  vec3 vrefract;

  if (fNDotNL > 0.0)
    vrefract = eta*i + (eta*cosTheta1 - cosTheta2)*n;
  else
    vrefract = eta*i + (eta*cosTheta1 + cosTheta2)*n;

  return vrefract;
}

// adapted from nvidia thinfilm HLSL shader example
// http://developer.download.nvidia.com/SDK/9.5/Samples/samples.html#glsl_thinfilm
// also see http://en.wikipedia.org/wiki/Thin-film_interference
float calc_view_depth(float fNDotV, float Thickness) {
  return Thickness/fNDotV;
}

// something I thought of to add contrast on the zoom...
vec4 focus(float dist, vec4 color) {
  //vec4 blue = vec4(124.0,149.0,205.0,1.0);
  //blue = (blue / 255.0)*0.5;
  return mix(1.5*color,0.0,clamp(0.5,0.0,smoothstep(3.0,1.0,dist)));
}

void main( void )
{
  vec3  fvNormal         = normalize( Normal );
  vec3  fvViewDirection  = normalize( ViewDirection );
  vec3  fvLightDirection = normalize( LightDirection );

  // simulate a thinfilm effect using the fringeMap and specified thickness.
  // since we are using two-sided surfaces, let this part be abs...
  float fNDotV           = abs(dot( fvNormal, -fvViewDirection ));
  float u                = calc_view_depth( fNDotV, fFilmDepth );
  vec4 fringeColor        = texture2D(fringeMap,vec2(u + 0.3,0.5));
   // the thinfilm effect modulates the phong specular component...
  float fNDotL           = dot( fvNormal, fvLightDirection );
  vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection );
  float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
  vec4 fvTotalSpecular   = fringeColor * fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  // hardcode eta for the snowflake shader at the value for ice...
  float etaRatio = 0.96 - 0.20*smoothstep(0.5,128.0,fFilmDepth); //0.95; //0.76;   // range between 0.76, ice and 0.96, close to air.
  // refraction stuff...
  vec3 fvRefraction   = refract_function(fvViewDirection, fvNormal, etaRatio);
  vec4 refractColor   = textureCube(environment, fvRefraction);
  vec4 noRefractColor = focus(fcameraDistance, textureCube(environment, fvViewDirection));

  vec4 snowflakeColor = texture2D(snowflakeMap, snowflakeTexCoords);
   //vec4 finalColor = mix(refractColor,phongColor,refractPhongMix);
   //vec4 finalColor = mix(refractColor,fvTotalSpecular,1.0);
  vec4 finalColor = (noRefractColor);
  if (snowflakeColor.r > 0.0) {
    finalColor = (refractColor + fvTotalSpecular);
  }




  gl_FragColor = finalColor;
}
]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 lightPositionWS;
uniform vec4 viewPositionWS;
uniform mat4 fmModel;

uniform sampler2D snowflakeMap;

varying vec2 snowflakeTexCoords;
varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying float fFilmDepth;

void main( void )
{
  float filmScale = 0.5;
  float heightScale = 0.01;
  
  //fFilmDepth = filmScale;
  vec4 vertexPositionMS = gl_Vertex;  // model space
  vec3 normalMS         = gl_Normal;  // model space

  // displace the position according to the heightfield...
  snowflakeTexCoords = gl_MultiTexCoord0.st;
  vec4 p = texture2D(snowflakeMap, snowflakeTexCoords);
  // unit mesh
  float unit = 1.0/512.0;
  vec4 ps = texture2D(snowflakeMap, snowflakeTexCoords + vec2(unit,0.0));
  vec4 pt = texture2D(snowflakeMap, snowflakeTexCoords + vec2(0.0,unit));

  vertexPositionMS = vec4(normalMS * p.r * heightScale , 0.0) + vertexPositionMS;
  vec4 t = (vec4(normalMS * ps.r * heightScale , 0.0) + vec4(unit,0.0,0.0,0.0)) - vertexPositionMS;
  vec4 b = (vec4(normalMS * pt.r * heightScale , 0.0) + vec4(0.0,0.0,unit,0.0)) - vertexPositionMS;

  fFilmDepth = (p.r) * filmScale;
  normalMS = (normalize(cross(t,b))).xyz;
   
  // disregard the displacements for debugging.
  //fFilmDepth = filmScale;
  //vec4 vertexPositionMS = gl_Vertex;  // model space
  //vec3 normalMS         = gl_Normal;  // model space
   
  vec4 vertexPositionWS = fmModel * vertexPositionMS;
  vec4 normalWS         = fmModel * vec4(normalMS,0.0);

  // for thin film and phong specular, we need eye space vectors...
  ViewDirection  = -(viewPositionWS   -  vertexPositionWS).xyz;
  LightDirection = -(lightPositionWS  -  vertexPositionWS).xyz;
  Normal         = (normalWS).xyz;

  gl_Position = gl_ModelViewProjectionMatrix * vertexPositionMS;  // in screen space
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="environment" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
     </RmTextureObject>
     <RmTextureObject NAME="snowflakeMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="snowflake" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="fringeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Fringe" API=""/>
     </RmTextureObject>
     <RmSampler NAME="environment" API="" REGISTER="-1"/>
     <RmSampler NAME="fringeMap" API="" REGISTER="-1"/>
     <RmSampler NAME="snowflakeMap" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fmModel" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="lightPositionWS" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fcameraDistance" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="viewPositionWS" API="" REGISTER="-1"/>
    </RmGLPass>
    <RmGLPass NAME="Pass 1" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="cube" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="0" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
// from HW3 
//#version 130

uniform samplerCube cubeMap;

varying vec3 fvVaryingTexCoords;

void main( void )
{  
   gl_FragColor = texture( cubeMap, fvVaryingTexCoords );
}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
// adapted from HW3
//#version 130

//uniform mat4 fmProj;
//uniform mat4 fmView;

varying vec3 fvVaryingTexCoords;
   
void main( void )
{
   mat4 fmView = gl_ModelViewMatrix;
   // extract rotation of view matrix
   mat3 fmViewRot;
   fmViewRot[0] = fmView[0].xyz;
   fmViewRot[1] = fmView[1].xyz;
   fmViewRot[2] = fmView[2].xyz; 
   
   // TODO: Part 5
   // use the normalized vertex position in object coordinates 
   // as the three texture coordinates. 
   fvVaryingTexCoords = normalize(gl_Vertex).xyz;
   
   // TODO: Part 5
   // Apply the rotation of the view matrix only. 
   // We never want to go to the edge of the skybox when 
   // moving around in our planetary system.
   // To achieve this, don't apply any transformations before 
   // drawing the skybox to make sure that the object and 
   // world coordinate systems coincide.
   // If we then only use the rotation of the view matrix, 
   // but not its translation, we rotate the skybox, but the 
   // skyboxes center stays always at the camera center. 
   vec4 fvVertexViewRot;
   fvVertexViewRot.xyz = fmViewRot * gl_Vertex.xyz;
   fvVertexViewRot.w = 1.0;

   gl_Position = gl_ProjectionMatrix * fvVertexViewRot;
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="cubeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmSampler NAME="cubeMap" API="" REGISTER="-1"/>
    </RmGLPass>
   </RmOpenGLEffect>
   <RmOpenGLEffect NAME="Textured Phong" API="OpenGL" ACTIVE_CAMERA="">
    <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="25.000000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmDynamicVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
     <RmDynamicVariableValueContainer>
      <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="-100.000000"/>
      <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="100.000000"/>
      <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
     </RmDynamicVariableValueContainer>
    </RmDynamicVariable>
    <RmDynamicVariable NAME="fvEyePosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
     <RmDynamicVariableValueContainer>
      <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
      <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
      <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
     </RmDynamicVariableValueContainer>
    </RmDynamicVariable>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.368627" VALUE_1="0.368421" VALUE_2="0.368421" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.886275" VALUE_1="0.885003" VALUE_2="0.885003" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.490196" VALUE_1="0.488722" VALUE_2="0.488722" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="base" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Textures\Fieldstone.tga" ORIGIN="0"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="Stream" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
     </RmStream>
    </RmStreamMap>
    <RmModelData NAME="Model" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\Sphere.3ds" ORIENTATION="0"/>
    <RmGLPass NAME="Pass 0" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="Model" API=""/>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
void main( void )
{
   gl_Position = ftransform();
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="base" API=""/>
      <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    </RmGLPass>
   </RmOpenGLEffect>
   <RmOpenGLEffect NAME="Snowflake_old" API="OpenGL" ACTIVE_CAMERA="">
    <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="2.980000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="fFilmDepth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="6.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmDynamicVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
     <RmDynamicVariableValueContainer>
      <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="-100.000000"/>
      <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="100.000000"/>
      <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
     </RmDynamicVariableValueContainer>
    </RmDynamicVariable>
    <RmDynamicVariable NAME="fvEyePosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
     <RmDynamicVariableValueContainer>
      <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
      <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
      <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
     </RmDynamicVariableValueContainer>
    </RmDynamicVariable>
    <RmFloatVariable NAME="sphereSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="etaRatio" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.760000" MIN="0.650000" MAX="1.000000" CLAMP="TRUE"/>
    <RmVectorVariable NAME="viewPosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="200.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="refractPhongMix" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="0.000000" MAX="1.000000" CLAMP="TRUE"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.886275" VALUE_1="0.885003" VALUE_2="0.885003" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.650980" VALUE_1="0.650762" VALUE_2="0.650762" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.368627" VALUE_1="0.368421" VALUE_2="0.368421" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvBaseColor" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.247059" VALUE_1="0.343823" VALUE_2="0.733333" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Fringe" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\ColorRamp01.png" ORIGIN="1"/>
    <Rm2DTextureVariable NAME="snowflake" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\texture.png" ORIGIN="1"/>
    <RmCubemapVariable NAME="Snow" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Textures\Snow.dds" ORIGIN="1"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="Stream" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     </RmStream>
    </RmStreamMap>
    <RmModelData NAME="Model" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\Torus2.obj" ORIENTATION="0"/>
    <RmModelData NAME="Sphere" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\Sphere.3ds" ORIENTATION="1"/>
    <RmGLPass NAME="Pass 1" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
     <RmModelReference NAME="Sphere" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform samplerCube environment;

varying vec4 vTexCoord;
varying vec4 vNormal;

void main(void)
{
  gl_FragColor = textureCube(environment, vTexCoord.xyz);
}
]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float sphereSize;
uniform vec4 viewPosition;

varying vec4 vTexCoord;
varying vec4 vNormal;

void main(void)
{
  vec3 position = gl_Vertex.xyz * sphereSize;
  position.xyz +=  vec3( viewPosition.x, viewPosition.y, viewPosition.z);
  gl_Position = gl_ModelViewProjectionMatrix * vec4(position, 1.0);
  vTexCoord.xyz = vec3(gl_Vertex.xyz);
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="environment" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmSampler NAME="environment" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="sphereSize" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="viewPosition" API="" REGISTER="-1"/>
    </RmGLPass>
    <RmGLPass NAME="Pass 0" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="Model" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="8" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
//uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
//uniform vec4 fvDiffuse;
//uniform vec4 fvBaseColor;
uniform float fSpecularPower;
uniform float fFilmDepth;
//uniform float etaRatio; 
//uniform float refractPhongMix;  // LK

uniform sampler2D fringeMap;
uniform samplerCube environment;
uniform sampler2D snowflakeMap;

varying vec2 TexCoords;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying vec3 Incident;          // LK: new var
varying vec3 WorldSpaceNormal;  // LK: new var

// LK: returns the refracted vector given I, N, and eta...
vec3 refract_function(vec3 i, vec3 n, float eta) {
   float sineSqTheta1 = 1.0 - pow(dot(n,i),2.0);
   float sineSqTheta2 = sineSqTheta1 * pow(eta,2.0);
   float cosSqTheta2 = 1.0 - sineSqTheta2;
   
   vec3 refractedVector = eta*i + 
                          ((eta * dot(n,-i)) - sqrt(cosSqTheta2))*n;
   return refractedVector;
}

float calc_view_depth(float fNDotV, float Thickness) {
   return float(Thickness / fNDotV);
}   

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   
   vec3  fvIncident       = normalize( Incident );  // LK
   vec3  fvWSNormal       = normalize( WorldSpaceNormal );  // LK
   
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
  
   //vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   //vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 

   float fNDotV           = dot( fvNormal, fvViewDirection );
   float filmDepth = calc_view_depth(fNDotV, fFilmDepth);
   vec2  coords = vec2(filmDepth,0.0);
   vec4  fringeColor = texture2D(fringeMap,coords);
   vec4  fvTotalSpecular  = fringeColor * fvSpecular * ( pow( fRDotV, fSpecularPower ) );
   
   float etaRatio = 0.76;
   // refraction stuff...
   vec3 fvRefraction = refract_function(fvIncident, fvWSNormal, etaRatio);
   // LK: personal tweak: added the specular to the refract for glossy style when full mix to refract...
   vec4 refractColor = textureCube(environment, fvRefraction) + fvTotalSpecular;
   
   //vec4 phongColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   
   vec4 p = texture2D(snowflakeMap, TexCoords);
   //vec4 finalColor = mix(refractColor,phongColor,refractPhongMix);
   vec4 finalColor = refractColor;
   if (p.r<0.01) 
      finalColor.a *= 0.0;

   gl_FragColor = finalColor;
   

}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 viewPosition;

uniform sampler2D snowflakeMap;

varying vec2 TexCoords;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying vec3 Incident;          // LK: new var
varying vec3 WorldSpaceNormal;  // LK: new var
   
void main( void )
{
   //gl_Position = ftransform();
   TexCoords = gl_MultiTexCoord0.xy;
   vec4 p = texture2D(snowflakeMap, TexCoords);
   vec4 newVertexPos = vec4(gl_Normal * p.r * 1 , 0.0) + gl_Vertex;
   //vec4 newVertexPos = gl_Vertex;
   

   vec4 fvObjectPosition = gl_ModelViewMatrix * newVertexPos;
   gl_Position = gl_ModelViewProjectionMatrix * newVertexPos;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal; 
   
   Incident         = vec3(gl_Vertex - viewPosition);  // LK
   WorldSpaceNormal = vec3(gl_Normal); // LK
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="environment" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
     </RmTextureObject>
     <RmTextureObject NAME="snowflakeMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="snowflake" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="fringeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Fringe" API=""/>
     </RmTextureObject>
     <RmSampler NAME="environment" API="" REGISTER="-1"/>
     <RmSampler NAME="fringeMap" API="" REGISTER="-1"/>
     <RmSampler NAME="snowflakeMap" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fFilmDepth" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="viewPosition" API="" REGISTER="-1"/>
    </RmGLPass>
   </RmOpenGLEffect>
   <RmOpenGLEffect NAME="Snowflake_nodisplacement" API="OpenGL" ACTIVE_CAMERA="">
    <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="fFilmDepth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="6.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="etaRatio" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.760000" MIN="0.650000" MAX="1.000000" CLAMP="TRUE"/>
    <RmVectorVariable NAME="viewPosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="-202.020737" VALUE_1="-62.562717" VALUE_2="112.991241" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmVectorVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="100.000000" VALUE_2="100.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmMatrixVariable NAME="mModelViewInverse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="WorldViewInverse" VALUE_0="0.442515" VALUE_1="-0.307115" VALUE_2="-0.842532" VALUE_3="-202.020737" VALUE_4="0.163519" VALUE_5="0.951411" VALUE_6="-0.260921" VALUE_7="-62.562714" VALUE_8="0.881727" VALUE_9="-0.022310" VALUE_10="0.471233" VALUE_11="112.991241" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="filmScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.309700" MIN="0.010000" MAX="10.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="heightScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.022078" MIN="0.000100" MAX="0.100000" CLAMP="TRUE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.650980" VALUE_1="0.650762" VALUE_2="0.650762" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Fringe" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\ColorRamp01.png" ORIGIN="1"/>
    <Rm2DTextureVariable NAME="snowflake" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\texture.png" ORIGIN="1"/>
    <RmCubemapVariable NAME="Snow" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Textures\Snow.dds" ORIGIN="1"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="Stream" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     </RmStream>
    </RmStreamMap>
    <RmModelData NAME="Model" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\Sphere.3ds" ORIENTATION="0"/>
    <RmModelData NAME="cube" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\TexturedCube.3ds" ORIENTATION="1"/>
    <RmGLPass NAME="Pass 2" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
     <RmModelReference NAME="Model" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="8" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendEquation" API="OpenGL" STATE="52" VALUE="5" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4  fvSpecular;
uniform float fSpecularPower;
//uniform float fFilmDepth;
uniform sampler2D fringeMap;
uniform samplerCube environment;
uniform sampler2D snowflakeMap;

varying vec2 TexCoords; // used to modulate opacity

varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 WorldSpaceNormal;
varying vec3 WorldSpaceViewDirection;
varying float fFilmDepth;


// LK: returns the refracted vector given normalized I, N vectors, and eta...  
// from snell's law: http://en.wikipedia.org/wiki/Snell's_law
vec3 refract_function(vec3 i, vec3 n, float eta) {
   float fNDotNL = dot(n,-i); 
   float cosTheta1 = fNDotNL;
   float cosTheta2 = sqrt(1.0 - pow(eta,2.0) * (1.0 - pow(cosTheta1,2.0)));

   vec3 vreflect = i + (2.0*cosTheta1)*n;

   vec3 vrefract;
   
   if (fNDotNL > 0.0)
      vrefract = eta*i + (eta*cosTheta1 - cosTheta2)*n;
   else
      vrefract = eta*i + (eta*cosTheta1 + cosTheta2)*n;
   
  return vrefract;
}

// adapted from nvidia thinfilm HLSL shader example
// http://developer.download.nvidia.com/shaderlibrary/webpages/screenshots/shaders/ThinFilm.html
// also see http://en.wikipedia.org/wiki/Thin-film_interference
float calc_view_depth(vec3 n, vec3 v, float Thickness) {
   float fNDotV = dot(n, v);
   return float(Thickness / fNDotV);
}   

void main( void )
{
   vec3  fvNormal         = normalize( Normal );
   vec3  fvViewDirection  = normalize( ViewDirection );
   vec3  fvLightDirection = normalize( LightDirection );
   
   vec3  fvWSNormal        = normalize( WorldSpaceNormal );
   vec3  fvWSViewDirection = normalize( WorldSpaceViewDirection );
   
   // simulate a thinfilm effect using the fringeMap and specified thickness.
   float filmDepth = calc_view_depth(fvNormal,fvViewDirection,fFilmDepth);
   vec2  coords = vec2(filmDepth,0.0);
   vec4  fringeColor = texture2D(fringeMap,coords);
   // the thinfilm effect modulates the phong specular component...
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   vec4  fvTotalSpecular  = fringeColor * fvSpecular * ( pow( fRDotV, fSpecularPower ) );
   
   // hardcode eta for the snowflake shader at the value for ice...
   float etaRatio = 0.76;
   // refraction stuff...
   vec3 fvRefraction = refract_function(fvWSViewDirection, fvWSNormal, etaRatio);
   // LK: personal tweak: added the specular to the refract for glossy style when full mix to refract...
   vec4 refractColor = textureCube(environment, fvRefraction) + fvTotalSpecular;
   
   //vec4 p = texture2D(snowflakeMap, TexCoords);
   //vec4 finalColor = mix(refractColor,phongColor,refractPhongMix);
   vec4 finalColor = refractColor;
   //if (fFilmDepth<0.001) 
   //   finalColor = vec4(0.0,0.0,0.0,0.0);

   gl_FragColor = finalColor;
   

}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvLightPosition;  // light position in world space
uniform vec4 viewPosition;     // view position (vec4) in world space
//uniform float filmScale;
//uniform float heightScale;

uniform sampler2D snowflakeMap;
uniform mat4 mModelViewInverse;

varying vec2 TexCoords;
varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 WorldSpaceNormal;
varying vec3 WorldSpaceViewDirection;
varying float fFilmDepth;
   
void main( void )
{
   vec4 newVertexPos;
   vec3 displacedNormal;
   
   // displace the position according to the heightfield...
   TexCoords = gl_MultiTexCoord0.xy;
   vec4 p = texture2D(snowflakeMap, TexCoords);
   float heightScale = 0.022;
   float filmScale = 1.30970;
   vec4 ps = texture2D(snowflakeMap, TexCoords + vec2(1.0/512.0,0.0));
   vec4 pt = texture2D(snowflakeMap, TexCoords + vec2(0.0,1.0/512.0));

   newVertexPos = vec4(gl_Normal * p.r * heightScale , 0.0) + gl_Vertex;
   vec4 t = vec4(gl_Normal * ps.r * heightScale , 0.0) + gl_Vertex;
   vec4 b = vec4(gl_Normal * pt.r * heightScale , 0.0) + gl_Vertex;

   fFilmDepth = (p.r) * filmScale;

   displacedNormal = normalize(cross(t,b)).xyz;
   
   // disregard the displacements for debugging.
   newVertexPos = gl_Vertex;
   displacedNormal = gl_Normal;
   fFilmDepth = filmScale;

   vec4 fvObjectPosition = gl_ModelViewMatrix * newVertexPos;  // vertex in eye space

   // for thin film and phong specular, we need eye space vectors...
   ViewDirection  = (gl_ModelViewMatrix *viewPosition   -  fvObjectPosition).xyz;   // needs to be eye space vector!
   LightDirection = (gl_ModelViewMatrix *fvLightPosition - fvObjectPosition).xyz;   // eye space vector!
   Normal         = gl_NormalMatrix * displacedNormal;  // normal vector in eye space.
   
   // but for refraction, we need world space vectors...
   WorldSpaceNormal        = (mModelViewInverse * vec4(Normal,0.0)).xyz;
   WorldSpaceViewDirection = (mModelViewInverse * vec4(-ViewDirection,0.0)).xyz;
   
   gl_Position = gl_ModelViewProjectionMatrix * newVertexPos;  // in screen space
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="environment" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
     </RmTextureObject>
     <RmTextureObject NAME="snowflakeMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="snowflake" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="fringeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Fringe" API=""/>
     </RmTextureObject>
     <RmSampler NAME="environment" API="" REGISTER="-1"/>
     <RmSampler NAME="fringeMap" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="mModelViewInverse" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="viewPosition" API="" REGISTER="-1"/>
    </RmGLPass>
    <RmGLPass NAME="Pass 1" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="cube" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="0" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
// from HW3 
//#version 130

uniform samplerCube cubeMap;

varying vec3 fvVaryingTexCoords;

void main( void )
{  
   gl_FragColor = texture( cubeMap, fvVaryingTexCoords );
}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
// adapted from HW3
//#version 130

//uniform mat4 fmProj;
//uniform mat4 fmView;

varying vec3 fvVaryingTexCoords;
   
void main( void )
{
   mat4 fmView = gl_ModelViewMatrix;
   // extract rotation of view matrix
   mat3 fmViewRot;
   fmViewRot[0] = fmView[0].xyz;
   fmViewRot[1] = fmView[1].xyz;
   fmViewRot[2] = fmView[2].xyz; 
   
   // TODO: Part 5
   // use the normalized vertex position in object coordinates 
   // as the three texture coordinates. 
   fvVaryingTexCoords = normalize(gl_Vertex).xyz;
   
   // TODO: Part 5
   // Apply the rotation of the view matrix only. 
   // We never want to go to the edge of the skybox when 
   // moving around in our planetary system.
   // To achieve this, don't apply any transformations before 
   // drawing the skybox to make sure that the object and 
   // world coordinate systems coincide.
   // If we then only use the rotation of the view matrix, 
   // but not its translation, we rotate the skybox, but the 
   // skyboxes center stays always at the camera center. 
   vec4 fvVertexViewRot;
   fvVertexViewRot.xyz = fmViewRot * gl_Vertex.xyz;
   fvVertexViewRot.w = 1.0;

   gl_Position = gl_ProjectionMatrix * fvVertexViewRot;
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="cubeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmSampler NAME="cubeMap" API="" REGISTER="-1"/>
    </RmGLPass>
   </RmOpenGLEffect>
   <RmOpenGLEffect NAME="Snowflake_almost" API="OpenGL" ACTIVE_CAMERA="">
    <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="fFilmDepth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="6.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="etaRatio" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.760000" MIN="0.650000" MAX="1.000000" CLAMP="TRUE"/>
    <RmVectorVariable NAME="viewPosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="200.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmVectorVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="100.000000" VALUE_2="100.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmMatrixVariable NAME="mModelViewInverse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="WorldViewInverse" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="filmScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.309700" MIN="0.010000" MAX="10.000000" CLAMP="TRUE"/>
    <RmFloatVariable NAME="heightScale" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.022078" MIN="0.000100" MAX="0.100000" CLAMP="TRUE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.650980" VALUE_1="0.650762" VALUE_2="0.650762" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Fringe" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\ColorRamp01.png" ORIGIN="1"/>
    <Rm2DTextureVariable NAME="snowflake" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME=".\texture.png" ORIGIN="1"/>
    <RmCubemapVariable NAME="Snow" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Textures\Snow.dds" ORIGIN="1"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="Stream" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     </RmStream>
    </RmStreamMap>
    <RmModelData NAME="Model" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\Sphere.3ds" ORIENTATION="0"/>
    <RmModelData NAME="cube" API="" FILE_NAME="C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\Media\Models\TexturedCube.3ds" ORIENTATION="1"/>
    <RmGLPass NAME="Pass 2" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
     <RmModelReference NAME="Model" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="8" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_BlendEquation" API="OpenGL" STATE="52" VALUE="5" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4  fvSpecular;
uniform float fSpecularPower;
//uniform float fFilmDepth;
uniform sampler2D fringeMap;
uniform samplerCube environment;
uniform sampler2D snowflakeMap;

varying vec2 TexCoords; // used to modulate opacity

varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 WorldSpaceNormal;
varying vec3 WorldSpaceViewDirection;
varying float fFilmDepth;


// LK: returns the refracted vector given normalized I, N vectors, and eta...  
// from snell's law: http://en.wikipedia.org/wiki/Snell's_law
vec3 refract_function(vec3 i, vec3 n, float eta) {
   float fNDotNL = dot(n,-i); 
   float cosTheta1 = fNDotNL;
   float cosTheta2 = sqrt(1.0 - pow(eta,2.0) * (1.0 - pow(cosTheta1,2.0)));

   vec3 vreflect = i + (2.0*cosTheta1)*n;

   vec3 vrefract;
   
   if (fNDotNL > 0.0)
      vrefract = eta*i + (eta*cosTheta1 - cosTheta2)*n;
   else
      vrefract = eta*i + (eta*cosTheta1 + cosTheta2)*n;
   
  return vrefract;
}

// adapted from nvidia thinfilm HLSL shader example
// http://developer.download.nvidia.com/shaderlibrary/webpages/screenshots/shaders/ThinFilm.html
// also see http://en.wikipedia.org/wiki/Thin-film_interference
float calc_view_depth(vec3 n, vec3 v, float Thickness) {
   float fNDotV = dot(n, v);
   return float(Thickness / fNDotV);
}   

void main( void )
{
   vec3  fvNormal         = normalize( Normal );
   vec3  fvViewDirection  = normalize( ViewDirection );
   vec3  fvLightDirection = normalize( LightDirection );
   
   vec3  fvWSNormal        = normalize( WorldSpaceNormal );
   vec3  fvWSViewDirection = normalize( WorldSpaceViewDirection );
   
   // simulate a thinfilm effect using the fringeMap and specified thickness.
   float filmDepth = calc_view_depth(fvNormal,fvViewDirection,fFilmDepth);
   vec2  coords = vec2(filmDepth,0.0);
   vec4  fringeColor = texture2D(fringeMap,coords);
   // the thinfilm effect modulates the phong specular component...
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   vec4  fvTotalSpecular  = fringeColor * fvSpecular * ( pow( fRDotV, fSpecularPower ) );
   
   // hardcode eta for the snowflake shader at the value for ice...
   float etaRatio = 0.76;
   // refraction stuff...
   vec3 fvRefraction = refract_function(fvWSViewDirection, fvWSNormal, etaRatio);
   // LK: personal tweak: added the specular to the refract for glossy style when full mix to refract...
   vec4 refractColor = textureCube(environment, fvRefraction) + fvTotalSpecular;
   
   //vec4 p = texture2D(snowflakeMap, TexCoords);
   //vec4 finalColor = mix(refractColor,phongColor,refractPhongMix);
   vec4 finalColor = refractColor;
   //if (fFilmDepth<0.001) 
   //   finalColor = vec4(0.0,0.0,0.0,0.0);

   gl_FragColor = finalColor;
   

}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvLightPosition;  // light position in world space
uniform vec4 viewPosition;     // view position (vec4) in world space
//uniform float filmScale;
//uniform float heightScale;

uniform sampler2D snowflakeMap;
uniform mat4 mModelViewInverse;

varying vec2 TexCoords;
varying vec3 Normal;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 WorldSpaceNormal;
varying vec3 WorldSpaceViewDirection;
varying float fFilmDepth;
   
void main( void )
{
   vec4 newVertexPos;
   vec3 displacedNormal;
   
   // displace the position according to the heightfield...
   TexCoords = gl_MultiTexCoord0.xy;
   vec4 p = texture2D(snowflakeMap, TexCoords);
   float heightScale = 0.022;
   float filmScale = 1.30970;
   vec4 ps = texture2D(snowflakeMap, TexCoords + vec2(1.0/512.0,0.0));
   vec4 pt = texture2D(snowflakeMap, TexCoords + vec2(0.0,1.0/512.0));

   newVertexPos = vec4(gl_Normal * p.r * heightScale , 0.0) + gl_Vertex;
   vec4 t = vec4(gl_Normal * ps.r * heightScale , 0.0) + gl_Vertex;
   vec4 b = vec4(gl_Normal * pt.r * heightScale , 0.0) + gl_Vertex;

   fFilmDepth = (p.r) * filmScale;

   displacedNormal = normalize(cross(t,b)).xyz;
   
   // disregard the displacements for debugging.
   newVertexPos = gl_Vertex;
   displacedNormal = gl_Normal;
   fFilmDepth = filmScale;

   vec4 fvObjectPosition = gl_ModelViewMatrix * newVertexPos;  // vertex in eye space

   // for thin film and phong specular, we need eye space vectors...
   ViewDirection  = (gl_ModelViewMatrix *viewPosition   -  fvObjectPosition).xyz;   // needs to be eye space vector!
   LightDirection = (gl_ModelViewMatrix *fvLightPosition - fvObjectPosition).xyz;   // eye space vector!
   Normal         = gl_NormalMatrix * displacedNormal;  // normal vector in eye space.
   
   // but for refraction, we need world space vectors...
   WorldSpaceNormal        = (mModelViewInverse * vec4(Normal,0.0)).xyz;
   WorldSpaceViewDirection = (mModelViewInverse * vec4(-ViewDirection,0.0)).xyz;
   
   gl_Position = gl_ModelViewProjectionMatrix * newVertexPos;  // in screen space
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="environment" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
     </RmTextureObject>
     <RmTextureObject NAME="snowflakeMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="snowflake" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="fringeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Fringe" API=""/>
     </RmTextureObject>
     <RmSampler NAME="environment" API="" REGISTER="-1"/>
     <RmSampler NAME="fringeMap" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="mModelViewInverse" API="" REGISTER="-1"/>
     <RmShaderConstant NAME="viewPosition" API="" REGISTER="-1"/>
    </RmGLPass>
    <RmGLPass NAME="Pass 1" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="cube" API=""/>
     <RmRenderStateBlock NAME="Render State" API="OpenGL">
      <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
      <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="0" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
// from HW3 
//#version 130

uniform samplerCube cubeMap;

varying vec3 fvVaryingTexCoords;

void main( void )
{  
   gl_FragColor = texture( cubeMap, fvVaryingTexCoords );
}]]></RmShaderCode></RmGLShader>
     <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
// adapted from HW3
//#version 130

//uniform mat4 fmProj;
//uniform mat4 fmView;

varying vec3 fvVaryingTexCoords;
   
void main( void )
{
   mat4 fmView = gl_ModelViewMatrix;
   // extract rotation of view matrix
   mat3 fmViewRot;
   fmViewRot[0] = fmView[0].xyz;
   fmViewRot[1] = fmView[1].xyz;
   fmViewRot[2] = fmView[2].xyz; 
   
   // TODO: Part 5
   // use the normalized vertex position in object coordinates 
   // as the three texture coordinates. 
   fvVaryingTexCoords = normalize(gl_Vertex).xyz;
   
   // TODO: Part 5
   // Apply the rotation of the view matrix only. 
   // We never want to go to the edge of the skybox when 
   // moving around in our planetary system.
   // To achieve this, don't apply any transformations before 
   // drawing the skybox to make sure that the object and 
   // world coordinate systems coincide.
   // If we then only use the rotation of the view matrix, 
   // but not its translation, we rotate the skybox, but the 
   // skyboxes center stays always at the camera center. 
   vec4 fvVertexViewRot;
   fvVertexViewRot.xyz = fmViewRot * gl_Vertex.xyz;
   fvVertexViewRot.w = 1.0;

   gl_Position = gl_ProjectionMatrix * fvVertexViewRot;
}]]></RmShaderCode></RmGLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="cubeMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
      <RmTextureReference NAME="Snow" API=""/>
      <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmSampler NAME="cubeMap" API="" REGISTER="-1"/>
    </RmGLPass>
   </RmOpenGLEffect>
  </RmEffectGroup>
 </RmEffectWorkspace>
</RENDER_MONKEY>
